1.什么是socket
	socket(简称 套接字) 是进程间通信的一种方式，它与其他进程间通信的一个主要不同是：
它能实现不同主机间的进程间通信，我们网络上各种各样的服务大多都是基于 Socket 来完成通信的
例如我们每天浏览网页、QQ 聊天、收发 email 等等

2.TCP简介
	TCP协议，传输控制协议（英语：Transmission Control Protocol，缩写为 TCP）是一种面向连接的、可靠的、基于字节流的传输层通信协议。
3.TCP特点：
	1. 面向连接
	通信双方必须先建立连接才能进行数据的传输，双方都必须为该连接分配必要的系统内核资源，以管理连接的状态和连接上的传输。
	双方间的数据传输都可以通过这一个连接进行。
	完成数据交换后，双方必须断开此连接，以释放系统资源。
	这种连接是一对一的，因此TCP不适用于广播的应用程序，基于广播的应用程序请使用UDP协议。
	2. 可靠传输
	1）TCP采用发送应答机制
	TCP发送的每个报文段都必须得到接收方的应答才认为这个TCP报文段传输成功
	2）超时重传
	发送端发出一个报文段之后就启动定时器，如果在定时时间内没有收到应答就重新发送这个报文段。
	TCP为了保证不发生丢包，就给每个包一个序号，同时序号也保证了传送到接收端实体的包的按序接收。然后接收端实体对已成功收到的包发回一个相应的确认（ACK）；
	如果发送端实体在合理的往返时延（RTT）内未收到确认，那么对应的数据包就被假设为已丢失将会被进行重传。
	3）错误校验
	TCP用一个校验和函数来检验数据是否有错误；在发送和接收时都要计算校验和。
	4) 流量控制和阻塞管理
	流量控制用来避免主机发送得过快而使接收方来不及完全收下。

4.TCP与UDP的不同点：
	面向连接（确认有创建三方交握，连接已创建才作传输。）
	有序数据传输
	重发丢失的数据包
	舍弃重复的数据包
	无差错的数据传输
	阻塞/流量控制
	
5.gevent里面monkey给程序打补丁
	使用猴子补丁的方式，gevent能够修改标准库里面大部分的阻塞式系统调用，包括socket、ssl、threading和 select等模块，而变为协作式运行。
也就是通过猴子补丁的monkey.patch_xxx()来将python标准库中模块或函数改成gevent中的响应的具有协程的协作式对象。这样在不改变原有代码的情况下，将应用的阻塞式方法，变成协程式的。

6.并发：指的是任务数多余cpu核数，通过操作系统的各种任务调度算法，实现用多个任务“一起”执行（实际上总有一些任务不在执行，因为切换任务的速度相当快，看上去一起执行而已）
并行：指的是任务数小于等于cpu核数，即任务真的是一起执行的

7.线程threading
	如果多个线程同时对同一个全局变量操作，会出现资源竞争问题，从而数据结果会不正确。
python的threading.Thread类有一个run方法，用于定义线程的功能函数，可以在自己的线程类中覆盖该方法。
而创建自己的线程实例后，通过Thread类的start方法，可以启动该线程，交给python虚拟机进行调度，当该线程获得执行的机会时，就会调用run方法执行线程。
在一个进程内的所有线程共享全局变量，很方便在多个线程间共享数据。
缺点就是，线程是对全局变量随意遂改可能造成多线程之间对全局变量的混乱（即线程非安全）

8.进程Process
	进程：一个程序运行起来后，代码+用到的资源 称之为进程，它是操作系统分配资源的基本单元。
进程，能够完成多任务，比如 在一台电脑上能够同时运行多个QQ
线程，能够完成多任务，比如 一个QQ中的多个聊天窗口
进程是系统进行资源分配和调度的一个独立单位。
线程是进程的一个实体,是CPU调度和分派的基本单位。
一个程序至少有一个进程,一个进程至少有一个线程.
线程的划分尺度小于进程(资源比进程少)，使得多线程程序的并发性高。
进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。
线程和进程在使用上各有优缺点：线程执行开销小，但不利于资源的管理和保护；而进程正相反。

9.协程Coroutine（yield，greenlet，gevent）
	在一个线程中的某个函数，可以在任何地方保存当前函数的一些临时变量等信息，然后切换到另外一个函数中执行，
注意不是通过调用函数的方式做到的，并且切换的次数以及什么时候再切换到原来的函数都由开发者自己确定
	由于IO操作非常耗时，经常使程序处于等待状态，有了gevent为我们自动切换协程，就保证总有greenlet在运行，而不是等待IO

10.进程、线程、协程对比
进程是资源分配的单位
线程是操作系统调度的单位
进程切换需要的资源很最大，效率很低
线程切换需要的资源一般，效率一般（当然了在不考虑GIL的情况下）
协程切换任务资源很小，效率高
多进程、多线程根据cpu核数不一样可能是并行的，但是协程是在一个线程中 所以是并发

11.html概述
	HTML是 HyperText Mark-up Language 的首字母简写，意思是超文本标记语言，超文本指的是超链接，标记指的是标签，
是一种用来制作网页的语言，这种语言由一个个的标签组成，用这种语言制作的文件保存的是一个文本文件，文件的扩展名为html或者htm。

12.css概述
	为了让网页元素的样式更加丰富，也为了让网页的内容和样式能拆分开，CSS由此思想而诞生，CSS是 Cascading Style Sheets 的首字母缩写，意思是层叠样式表。
有了CSS，html中大部分表现样式的标签就废弃不用了，html只负责文档的结构和内容，表现形式完全交给CSS，html文档变得更加简洁。

13.JavaScript介绍
	JavaScript是运行在浏览器端的脚步语言，JavaScript主要解决的是前端与用户交互的问题，包括使用交互与数据交互。 JavaScript是浏览器解释执行的，前端脚本语言还有JScript（微软，IE独有），ActionScript( Adobe公司，需要插件)等。

前端三大块 
1、HTML：页面结构
2、CSS：页面表现：元素大小、颜色、位置、隐藏或显示、部分动画效果
3、JavaScript：页面行为：部分动画效果、页面与用户的交互、页面功能

14.jquery介绍
	jQuery是目前使用最广泛的javascript函数库。
	
15.ajax与jsonp
	ajax技术的目的是让javascript发送http请求，与后台通信，获取数据和信息。
ajax技术的原理是实例化xmlhttp对象，使用此对象与后台通信。ajax通信的过程不会影响后续javascript的执行，从而实现异步。
	ajax可以实现局部刷新，也叫做无刷新，无刷新指的是整个页面不刷新，只是局部刷新，ajax可以自己发送http请求，不用通过浏览器的地址栏，所以页面整体不会刷新，ajax获取到后台数据，更新页面显示数据的部分，就做到了页面局部刷新。
	ajax请求的页面或资源只能是同一个域下面的资源，不能是其他域的资源，这是在设计ajax时基于安全的考虑
	
$.ajax使用方法 
常用参数：
1、url 请求地址
2、type 请求方式，默认是'GET'，常用的还有'POST'
3、dataType 设置返回的数据格式，常用的是'json'格式，也可以设置为'html'
4、data 设置发送给服务器的数据
5、success 设置请求成功后的回调函数
6、error 设置请求失败后的回调函数
7、async 设置是否异步，默认值是'true'，表示异步

jsonp 
ajax只能请求同一个域下的数据或资源，有时候需要跨域请求数据，就需要用到jsonp技术，jsonp可以跨域请求数据，它的原理主要是利用了<script>标签可以跨域链接资源的特性。
jsonp和ajax原理完全不一样，不过jquery将它们封装成同一个函数。


16.Whoosh + jieba
搜索页面
草莓  GoodsSKU   df_sku
select * from df_sku where name like ‘%草莓%’ or title like ‘%草莓%’ 
草莓
草莓 500g    深圳盒装草莓物美价廉    小草莓
Dong  678
全文检索
搜索引擎  
1.建立数据的索引表    草莓 sku= 1 2 3   基围虾 sku =100
2.进行中文分词操作 *
whoosh  
搜索框架
haystack  搭建了用户和搜索引擎之间的沟通问题

在base.html中编辑搜索栏
搜索结果模板：在templates/search/目录下创建search.html
搜索结果进行分页，视图向模板中传递的上下文如下
query：搜索关键字
page：当前页的page对象
paginator：分页paginator对象
视图接收的参数如下：
参数q表示搜索内容，传递到模板中的数据为query
参数page表示当前页码
根据列表页的模板来制作搜索结果页的模板
创建模板search.html

17.9.3更新购物车
非幂等  /cart/add?sku_id=1&num=2
幂等 /cart/update?sku_id=1&finally_num=18

对于同一种行为，如果执行不论多少次，最终的结果都是一致相同的，就称这种行为是幂等的
对于同一种行为，如果最终的结果与执行的次数有关，每次执行后结果都不相同，就称这种行为为非幂等




